#!/bin/bash
set -eou pipefail

## Enable this hook with: git config
## git config core.hooksPath .git-hooks/

. scripts/common.sh

main_block () {
	local PIDS=()
	validate_circleci_config &
	PIDS+=($!)
	validate_compile_and_lint &
	PIDS+=($!)
	validate_version_updated &
	PIDS+=($!)
	validate_package_json &
	PIDS+=($!)

	local ERRCOUNT=0
	for PID in "${PIDS[@]}"; do
		if ! wait "$PID"; then
			ERRCOUNT=$((ERRCOUNT + 1))
		fi
	done

	if [ $ERRCOUNT -gt 0 ]; then
		echo "pre-commit checks had $ERRCOUNT test failures!" >&2
		exit 1
	fi

	echo "pre-commit checks successful!" >&2
}

validate_circleci_config () {
	echo "[$(date +%Y-%m-%d:%H:%M:%S) $0 ${FUNCNAME[0]}]"

	if ! git diff --name-only --staged | grep -q 'circleci/config.yml'; then
		echo "circleci/config.yml is not staged for commit, skipping validation..." >&2
		return 0
	fi

	if command -v circleci; then
		circleci config validate
	else
		wsl circleci config validate
	fi
}

validate_package_json () {
	echo "[$(date +%Y-%m-%d:%H:%M:%S) $0 ${FUNCNAME[0]}]"
	PACK1=$(md5sum < package.json)
	PACK2=$(md5sum < package.stable.json)
	if [ "$PACK1" != "$PACK2" ]; then
		echo "package.json and package.stable.json are different and should be the same" >&2
		exit 1
	fi
}

validate_compile_and_lint () {
	echo "[$(date +%Y-%m-%d:%H:%M:%S) $0 ${FUNCNAME[0]}]"
	npm run build
	npm run lint
}

validate_other () {
	echo "[$(date +%Y-%m-%d:%H:%M:%S) $0 ${FUNCNAME[0]}]"
	if grep 'set -eou'; then
		echo "ERROR: found 'set -eou'!  Change to 'set -euo pipefail'." >&2
		exit 1
	fi
}

########## MAIN BLOCK ##########
main_block
